{"name":"魔乐塔的个人主页","tagline":"人类是文明的缔造者，但当它存在以后，就不属于人类了。若是上帝造了人，那么人也不是属于上帝的，人属于人类自己。我们已看不到上帝，终有一天，继承这文明的，也将看不到我们。","body":"# js 中的引用类型\r\n1、js中的数据类型：Undefined，Null，Boolean，Number，String，Object\r\nObject类型的属性和方法：\r\n * constructor：保存用于创建当前对象的函数，\r\n * hasOwnProperty(propertyName)：用于检查给定的属性在当前对象实例（而不是在实例的原型）中是否存在，参数必须以字符串形式指定\r\n * isPrototypeOf(object)用于检查传入的对象是否是另一个对象的原型，\r\n * propertyIsEnumerable(propertyName)：用于检查传入的对象是否能使用for in语句来每局。\r\n * toString()  \r\n * valueOf()\r\n2、js中的引用类型有：Object类型，Array类型，Date类型，RegExp类型，Function类型，基本包装类型（Boolean，Number，String），内置对象（Global，Math类型）\r\n\r\nObject对象的创建\r\n`var person = new Object();\r\nperson.name = \"Nick\";\r\nperson.age  = 29;`\r\n\r\n对象字面量表示法：简化了对象创建的代码\r\n`var p = { name : \"Nick\" , age :19 }`\r\n`var p = { \"name\" : \"Nick\" , \"age\" :19 }`\r\n以上两端代码是等价的\r\n\r\nObject对象的访问：使用 “.” 和“[propertyName]”表示法访问对象的属性。\r\n`p.name``p[\"name\"]`,使用“[]”的好处是可以使用变量。通常，除非使用变量访问属性，否则建议使用\".\"\r\n\r\n3、Array类型\r\njs中的数组和其他语言中的数组有着很大的区别，js中的数组可以保存任何类型的数据，如`new Array{\"abc\",\"20\"}`\r\n创建数组\r\n`var color = new Array(20)` 创建一个20项的数组。\r\n`var colors = new Array(\"red\",\"blue\",\"green\")`也可以这样，js的语法是非常灵活的。\r\n利用数组字面量创建\r\n`var col = []`//创建一个空数组\r\n`var d=[\"red\",\"color\",\"green\"]`//\r\n\r\n获取数组的长度：`var len = d.length`\r\n\r\n数组最多可以包含4,294,967,295个项，多了，会报异常。\r\n\r\ntoLocaleString()方法和toString()方法的不同。\r\n\r\njoin()方法：`d.join(\",\")`// 返回 red，color，green\r\n数组的栈方法和队列方法\r\npush()方法将元素插入到数组末尾，pop()方法获取数组末尾的值\r\nshift()，获取数组的第一项\r\n\r\n重排方法：reverse()和sort方法\r\nreverse会反转数组[1,2,3,4,5]——>[5,4,3,2,1]\r\nsort()方法会调用每一项的toString()方法后升序排列数组，如[1,2,5,10]的结果是[1,10,2,5]\r\nslice()方法\r\nconcat()方法\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}