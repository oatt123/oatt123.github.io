{"name":"魔乐塔的个人主页","tagline":"人类是文明的缔造者，但当它存在以后，就不属于人类了。若是上帝造了人，那么人也不是属于上帝的，人属于人类自己。我们已看不到上帝，终有一天，继承这文明的，也将看不到我们。","body":"# js中的一些细节\r\n\r\n## 1级\r\n1、XHTML:HTML遵循xml的规则。XHTML中“<” ，“>”需要使用html实体(&lt;\\&lt;)替代，当然，这样会导致代码不容易理解，可以使用CDATA区域来解决（CDATA区域的语法规则：<![CDATA[ ... ... ]]>）\r\n\r\n2、使用引入的方式而不是直接将代码写在html中的有点有3个：1、便于维护，2、可缓存，3、避免xhtml以及其他xml技术的不兼容。\r\n\r\n3、文档模式（<!DOCTYPE HTML PUBLIC \"\" \"\">）的概念：混杂模式，标准模式，会影响css的呈现和js的执行。\r\n\r\n4、noscript标签：标签中的内容，会在js功能缺失的情况下执行\r\n\r\n## 2级\r\n1、为初始化的变量初值是undefined\r\n\r\n2、可以在修改变量值的同时，修改变量的类型\r\n`var message = \"hello\"; `\r\n`message = 100;`\r\n\r\n3、var关键字控制的局部变量和全局变量\r\n`function add(){ `\r\n`   var a =\"a-test\";`\r\n`   alert(a);`\r\n`}`\r\n以上的代码，因为使用了var来声明a，所以，a是局部变量，当方法返回后，a便会被销毁\r\n\r\n4、typeof是操作符而非函数，我们会看到 `typeof (95)`这样的用法，其中\"95\"两边的括号可以不要，两种语法都可以正常使用。\r\ntypeof的返回值是字符串，有6个。\r\n`\"undefined\"——>如果测试值未定义`\r\n`\"boolean\"`\r\n`\"string\"`\r\n`\"number\"`\r\n`\"object\"——>测试值是对象或null，也就是说 typeof null 返回的是字符串\"object\"`\r\n`\"function\"——>测试值是函数`\r\n\r\n5、数值类型的值可以是 十，八，十六进制值，\r\n\r\n6、NaN:NaN（Not a Number）,是一个特殊的数值，非数值。当一个本来要返回数值的操作，未返回数值的时候，会返回此值，这样避免了抛出错误。\r\n如666/0，会返回NaN,而不是抛出错误，不会影响其他代码的执行。\r\nNaN两个不同寻常的特点：1、任何设计NaN的操作都会返回NaN,当然这是游客嫩导致问题的。2、NaN与任何值都不想等，包括NaN本身。NaN == NaN返回的是false。\r\nisNaN(Param)方法：返回的是true和false，当传入的Param可以转换成数值的时候，返回true，否则返回false。\r\nisNaN方法也使用与对象。\r\n\r\n\r\n7、isFinite(Param):当Param的返回在Number.MAX_VALUE和Number.MIN_VALULE之间时返回true，否则返回false。\r\n\r\n8、e在数值中的使用\r\n\r\n9、Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}